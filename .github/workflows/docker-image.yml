name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Running at midnight daily, to prove the pipeline consistently runs successfully
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 1. SETUP YOUR DEVELOPMENT ENVIRONMENT
      uses: actions/checkout@v3

    - name: Set up Python3
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        architecture: 'x64'

    - name: Install Python Dependencies
      run: |
        pip install --upgrade pip setuptools wheel pip-install-test tox
        tox -e py
      continue-on-error: true

    # Set up Docker (for Docker file upload)
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log into Docker Hub (for Docker file upload)
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Containerize original Hello-World Dockerfile for Docker Upload
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./ansible/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/hello-world:latest
      
      # Setting up ansible Dockerfile build dependencies
    - name: 3. CREATE A CI PIPELINE 
      uses: artis3n/ansible_galaxy_collection@v2.8.3
      with:
        api_key: ${{ secrets.GALAXY_API_KEY }}
        publish: false

    - name: Install ansible collection / Run playbook
      working-directory: ./ansible
      run: |
        ansible-galaxy collection install community.docker
        ansible-playbook playbook.yml -i inventory.ini --extra-vars "dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }} dockerhub_password=${{ secrets.DOCKERHUB_TOKEN }}"   